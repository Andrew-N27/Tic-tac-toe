import os # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –º–æ–¥—É–ª—å –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–∞—à–æ–≥–æ —Ç–µ—Ä–º—ñ–Ω–∞–ª—É
import random # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–∏—Å–ª–∞

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –∫–æ—Ä—Ç–µ–∂—ñ–≤ –≤–∏–≥—Ä–∞—à–Ω–∏—Ö –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π (–º–∞—Å–∏–≤ –∫–æ—Ä—Ç–µ–∂—ñ–≤)
WIN_COMB = ((1,2,3), (4,5,6), (7,8,9), (1,4,7), (2,5,8), (3,6,9), (1,5,9), (3,5,7))

# –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–ª—è
def draw_board(board):
   for i in range(1,4): # –¶–∏–∫–∏–ª —Ñ–æ—Ä (–ø–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥ 1 –¥–æ 3) –ø—Ä–∞—Ü—é—î 3 —ñ—Ç–µ—Ä–∞—Ü—ñ—ó
      print(' ', board.get(i * 3 - 2), '|', board.get(i * 3 - 1), '|', board.get(i * 3), ' ') # –ê–ª–≥–æ—Ä–∏—Ç–º —è–∫–∏–π –¥–æ–∑–≤–æ–ª—è—ç –Ω–∞–º –≤–∏–≤–µ—Å—Ç–∏ –ø–æ–ª–µ
      if i != 3: # –ë–ª–æ–∫ –∫–æ–¥—É —ñ—Ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î —â–æ–± –∞–π –Ω–µ –¥–æ—Ä—ñ–≤–Ω—é–≤–∞–ª–æ 3 (–¥–ª—è —Ç–æ–≥–æ —â–æ–± –±—É–ª–æ –ª–∏—à–µ 2 –ª—ñ–Ω—ñ—î –Ω–∞ –ø–æ–ª—ñ)
         print(' ëÅã ' * 4) # –ù–µ –±–∞–≥, –∞ —Ñ—ñ—à–∫–∞) –ü–∞–π—Ç–æ–Ω –¥–æ–∑–≤–æ–ª—è—î –Ω–∞–º –º–Ω–æ–∂–∏—Ç–∏ —Å—Ç—Ä–æ–∫–∏ (–∑–∞–ø–∏—Å –µ–∫–≤—ñ–≤–∞–ª–µ–Ω—Ç–Ω–∏–π —Ü—å–æ–º—É "' ëÅã ëÅã ëÅã ëÅã'")

# –§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –≤–≤–æ–¥–∏—Ç—å –≤ —Å–ª–æ–≤–∞—Ä—å –• –∞–±–æ –û —É –≤–∫–∞–∑–∞–Ω—É –≥—Ä–∞–≤—Ü–µ–º –ø–æ–∑–∏—Ü—ñ—é 
def take_input(player_token, board):
   while True: # –ë–µ–∑–∫—ñ–Ω–µ—á–Ω–∏–π —Ü–∏–∫–ª (–∑–∞–∫—ñ–Ω—á–∏—Ç—å—Å—è - –ø—Ä–∏—Ä–≤–µ—Ç—å—Å—è –∫–æ–ª–∏ –º–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–∏—Å–≤–æ—î–º–æ –• –∞–±–æ –û –≤ –Ω–∞—à dictionary (—Å–ª–æ–≤–∞—Ä—å) 'board')
      draw_board(board) # –§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –≥—Ä–∞–≤—Ü—è–º –ø–æ–ª–µ 

                           # ‚Üì‚Üì‚Üì‚Üì‚Üì –ö–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü—ñ—è —Å—Ç—Ä–æ–∫ ‚Üì‚Üì‚Üì‚Üì‚Üì
      player_answer = input('\n–ö—É–¥–∏ –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ ' + player_token + ' ? ') # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–º—ñ–Ω–Ω—É —ñ –ø—Ä–∏—Å–≤–æ—é—î–º–æ —ó–π —Ä—ñ—à–µ–Ω–Ω—è –≥—Ä–∞–≤—Ü—è "–∫—É–¥–∏ –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ –• –∞–±–æ –û"
      os.system('cls||clear') # –û—á–∏—â—É—î–º–æ –Ω–∞—à —Ç–µ—Ä–º—ñ–Ω–∞–ª
      try: # –ë–ª–æ–∫ try –¥–æ–∑–≤–æ–ª—è—î –Ω–∞–º –≤–∏–∫–æ–Ω–∞—Ç–∏ –¥—ñ—é —è–∫–∞ –º–æ–∂–µ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ–º–∏–ª–∫—É —ñ –∑—É–ø–∏–Ω–∏—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É
         player_answer = int(player_answer) # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç—Ä–æ–∫—É —è–∫—É –æ–±—Ä–∞–≤ –≥—Ä–∞–≤–µ—Ü—å –≤ —á–∏—Å–ª–æ

      except: # –Ø–∫—â–æ –≤–∏–Ω–∏–∫–∞—î –ø–æ–º–∏–ª–∫–∞ –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ñ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —á–∏—Å–ª–æ —Ç–æ–¥—ñ –º–∏ –∑–∞—Ö–æ–¥–∏–º–æ –≤ –±–ª–æ–∫ except —ñ –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –≥—Ä–∞–≤—Ü—è
         print('–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –≤–≤—ñ–¥. –í–∏ –≤–ø–µ–≤–Ω–µ–Ω–Ω—ñ, —â–æ –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ?\n–°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑')
         continue # –û–ø–µ—Ä–∞—Ç–æ—Ä —è–∫–∏–π –ø–æ—á–∏–Ω–∞—î —Ü–∏–∫–ª —Å–ø–æ—á–∞—Ç–∫—É (–ø–æ–≤–µ—Ä—Ç–∞—î –Ω–∞—Å –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ —Ü–∏–∫–ª—É)

      if player_answer >= 1 and player_answer <= 9: # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≥—Ä–∞–≤–µ—Ü—å –æ–±—Ä–∞–≤ —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 9
         if(board.get(player_answer) not in "XO"):  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —è–∫–µ –æ–±—Ä–∞–≤ –≥—Ä–∞–≤–µ—Ü—å –Ω–µ –∑–∞–π–Ω—è—Ç–µ –• –∞–±–æ –û
            board[player_answer] = player_token     # –ü—Ä–∏—Å–≤–æ—é—î–º–æ –• –∞–±–æ –û –ø–æ –∫–ª—é—á—É (–Ω–∞—à –∫–ª—é—á —Ü–µ —Ç–æ —á–∏—Å–ª–æ —è–∫–µ –æ–±—Ä–∞–≤ –≥—Ä–∞–≤–µ—Ü—å)
            break                                   # –ó–∞–≤–¥—è–∫–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É break –≤–∏—Ö–æ–¥–∏–º–æ –∑ —Ü–∏–∫–ª—É - (–ø—Ä–∏—Ä–∏–≤–∞—î–º–æ)
         else:
            print('–¶—è –ø–æ–∑–∏—Ü—ñ—è –≤–∂–µ –∑–∞–π–Ω—è—Ç–∞')
      else: 
         print('–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –≤–≤—ñ–¥. –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 9')

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —É –Ω–∞—Å –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å 
def check_win(board):
   for comb in WIN_COMB: # –¶–∏–∫–ª–æ–º —Ñ–æ—Ä –ø–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –∫–æ—Ä—Ç–µ–∂—ñ –∑ –º–∞—Å–∏–≤–∞ –∫–æ—Ä—Ç–µ–∂—ñ–≤
      if board[comb[0]] == board[comb[1]] == board[comb[2]]:# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π "–• == –• == –•" –∞–±–æ "–û == –û == –û" —è–∫—â–æ —î –º–∏ –∑–∞—Ö–æ–¥–∏–º–æ –≤ –±–ª–æ–∫ —ñ—Ñ
         print(board.get(comb[0]), ' –ø–µ—Ä–µ–º—ñ–≥') # –í–∏–≤–æ–¥–∏–º–æ –≤ —Ç–µ—Ä–º—ñ–Ω–∞–ª –ø–µ—Ä–µ–º–æ–∂—Ü—è
         return True # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è "True" —è–∫–µ –æ–∑–Ω–∞—á–∞—î, —â–æ –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å —î
   return False # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è "False" —è–∫–µ –æ–∑–Ω–∞—á–∞—î, —â–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è –Ω–µ–º–∞—î

# –ó–Ω–∞—Ö–æ–¥–∏–º–æ —á–∏—Å–ª–æ —è–∫–µ –ø—Ä–∏–∑–≤–µ–¥–µ –¥–æ –ø–µ—Ä–µ–º–æ–≥–∏ –∞–±–æ –∑—Ä—É–π–Ω—É—î –ø–µ—Ä–µ–º–æ–≥—É –Ω–∞—à–æ–º—É —Å—É–ø–µ—Ä–Ω–∏–∫—É –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ "—Ç–æ–∫–µ–Ω—É"
def win_number(token, board):
   for each in WIN_COMB: # –¶–∏–∫–ª–æ–º —Ñ–æ—Ä –ø–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –∫–æ—Ä—Ç–µ–∂—ñ –∑ –º–∞—Å–∏–≤–∞ –∫–æ—Ä—Ç–µ–∂—ñ–≤
         if board[each[0]] == board[each[1]] == token: # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π "–• == –• == token" –∞–±–æ "–û == –û == token"
            if(str(board.get(each[2])) not in "XO"):
               board[each[2]] = 'O'
               return True
         elif board[each[0]] == token == board[each[2]]: # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π "–• == token == –•" –∞–±–æ "–û == token == –û"
            if(str(board.get(each[1])) not in "XO"):
               board[each[1]] = 'O'
               return True
         elif token == board[each[1]] == board[each[2]]: # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π "token == –• == –•" –∞–±–æ "token == –û == –û"
            if(str(board.get(each[0])) not in "XO"):
               board[each[0]] = 'O'
               return True
   return False

# –ù–∞ —à—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç =)
def bot(board, level = 1):
   if level >= 2:
      if win_number('O', board): # –ü–µ—Ä–µ–≤—ñ—Ä—è—î—Å–æ —á–∏ —î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —á–∏—Å–ª–æ –¥–ª—è –ø–µ—Ä–µ–º–æ–≥–∏ –≤ —Å–∞–º—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó —è–∫—â–æ —Ç–∞–∫ = True | –Ω—ñ = False
         return

   if level > 2:
      if win_number('X', board): # –ü–µ—Ä–µ–≤—ñ—Ä—è—î—Å–æ —á–∏ —î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —á–∏—Å–ª–æ –¥–ª—è –ø–µ—Ä–µ–º–æ–≥–∏ –≤ —Å–∞–º—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó —è–∫—â–æ —Ç–∞–∫ = True | –Ω—ñ = False
         return

   while True:
      temp = random.randint(1,9) # –ü—Ä–∏—Å–≤–æ—é—î–º–æ –±—É–¥—å —è–∫–µ —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 9
      if(str(board.get(temp)) not in "XO"): # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤–∫–∞–∑–∞–Ω–æ–º—É —á–∏—Å–ª—ñ –Ω–µ–º–∞—î –• –∞–±–æ –û
         board[temp] = 'O'
         break

# –ü–æ—á–∞—Ç–æ–∫ –≥—Ä–∏
def start_game(board):
   counter = 0 # –õ—ñ—á–∏–ª—å–Ω–∏–∫ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ñ—ñ–≥—É—Ä –Ω–∞ –∫–∞—Ä—Ç—ñ
   win = False # –ë—É–ª—å–æ–≤–∞ –∑–º—ñ–Ω–Ω–∞ —è–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ —Ç–µ —á–∏ —î —É –Ω–∞—Å –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å
   bot_level = 0 # –ó–º—ñ–Ω–Ω–∞ —è–∫–∞ —Å—Ç—Ä–∏–º—É—î –≤–µ—Å—å –ø–æ—Ç–µ–Ω—Ü—ñ–∞–ª –Ω–∞—à–æ–≥–æ —ñ—ñ

   os.system('cls||clear') # –û—á–∏—â—É—î–º–æ –Ω–∞—à —Ç–µ—Ä–º—ñ–Ω–∞–ª
   print("\n_________–ì—Ä–∞ –≤ —Ö—Ä–µ—Å—Ç–∏–∫–∏ –Ω–æ–ª–∏–∫–∏_________\n")# –ù–∞—à –∑–∞–≥–æ–ª–æ–≤–æ–∫
   print(' 1 - –¥–ª—è –¥–≤–æ—Ö –≥—Ä–∞–≤—Ü—ñ–≤ ')
   print(" 2 - –ø—Ä–æ—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä–∞ ")
   ag_who = input(' : ') # –ü—Ä–∏—Å–≤–æ—é—î–º–æ –≤–∏–±—ñ—Ä –≥—Ä–∞–≤—Ü—è (1 –∞–±–æ 2)

   if ag_who != '1': # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–∏–±—ñ—Ä –≥—Ä–∞–≤—Ü—è —á–∏ –±–∞–∂–∞ –≤—ñ–Ω –≥—Ä–∞—Ç–∏ –ø—Ä–æ—Ç–∏ –∫–æ–º–ø'—é—Ç–µ—Ä–∞
      print(''' –í–∏–±–µ—Ä—ñ—Ç—å —Ä—ñ–≤–µ–Ω—å —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ 
   [1] - –õ–µ–≥–∫–∏–π
   [2] - –°–µ—Ä–µ–¥–Ω—ñ–π
   [3] - –í–∞–∂–∫–∏–π ''')
      bot_level = input(' : ') # –ü—Ä–∏—Å–≤–æ—é—î–º–æ –≤–∏–±—ñ—Ä –≥—Ä–∞–≤—Ü—è (—Ä—ñ–≤–µ–Ω—å –≤–∞–∂–∫–æ—Å—Ç—ñ)
      os.system('cls||clear') # –û—á–∏—â—É—î–º–æ –Ω–∞—à —Ç–µ—Ä–º—ñ–Ω–∞–ª
   
   while not win: # <-- = (win == False) —Ü–∏–∫–ª –∑–∞–∫—ñ–Ω—á–∏—Ç—å—Å—è –∫–æ–ª–∏ –º–∏ –∑–Ω–∞–π–¥–µ–º–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è –∞–±–æ –±—É–¥–µ –Ω—ñ—á–∏—è

      if counter % 2 == 0: #–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞—Ä–Ω–æ—Å—Ç—ñ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ (—è–∫—â–æ –ø–∞—Ä–Ω–∏–π —Ç–æ —Ö–æ–¥–∏—Ç—å –• —è–∫—â–æ –Ω—ñ —Ç–æ —Ö–æ–¥–∏—Ç—å –û)
         take_input('X', board) # –§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –≤–≤–æ–¥–∏—Ç—å –≤ –ø–æ–ª–µ (—Å–ª–æ–≤–∞—Ä—å) –• –∞–±–æ –û —É –≤–∫–∞–∑–∞–Ω—É –≥—Ä–∞–≤—Ü–µ–º –ø–æ–∑–∏—Ü—ñ—é 
      else:
         if ag_who == '1': # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≥—Ä–∞–≤–µ—Ü—å '–ë–æ—ó—Ç—å—Å—è' –Ω–∞—à–æ–≥–æ —à—Ç—É—á–Ω–æ–≥–æ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É 1 <= –±–æ—ó—Ç—å—Å—è
            take_input('O', board) # –§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –≤–≤–æ–¥–∏—Ç—å –≤ –ø–æ–ª–µ (—Å–ª–æ–≤–∞—Ä—å) –• –∞–±–æ –û —É –≤–∫–∞–∑–∞–Ω—É –≥—Ä–∞–≤—Ü–µ–º –ø–æ–∑–∏—Ü—ñ—é 
         else:
            bot(board, int(bot_level)) # –•—ñ–¥ –Ω–∞—à–æ–≥–æ –∑–≤—ñ—Ä–∞ –æ_–û

      counter += 1 # –ü—ñ—Å–ª—è —Ö–æ–¥—É –≥—Ä–∞–≤—Ü—è –∑–±—ñ–ª—å—à—É—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –Ω–∞ 1 —Ç–æ–±—Ç–æ –¥–æ–¥–∞—î–º–æ –¥–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ —Ö—ñ–¥ –≥—Ä–∞–≤—Ü—è

      if counter > 4: # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –±—É–ª–æ 5 —Ö–æ–¥—ñ–≤ (—á–∏ —î 5 —Ñ—ñ–≥—É—Ä –Ω–∞ –∫–∞—Ä—Ç—ñ —è–∫—â–æ —Ç–∞–∫ —Ç–æ –º–∏ –∑–∞—Ö–æ–¥–∏–º–æ –≤ –±–ª–æ–∫ —ñ—Ñ —ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —É –Ω–∞—Å –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å)
         win = check_win(board) # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —É –Ω–∞—Å –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ 'True' or 'False' –ø—Ä–∏—Å–≤–æ—é—î–º–æ –∑–º—ñ–Ω–Ω—ñ–π 'win' )
      
      if counter == 9 and not win: # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–æ–ª–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ –ø–æ–≤–Ω—ñ—Å—Ç—é —ñ —á–∏ —î —É –Ω–∞—Å –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å 
         print("–ü–µ—Ä–µ–º–æ–≥–ª–∞ –¥—Ä—É–∂–±–∞") # (—è–∫—â–æ –ø–æ–ª–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ —ñ –ø–µ—Ä–µ–º–æ–∂—Ü—è –Ω–µ–º–∞—î –º–∏ –∑–∞—Ö–æ–¥–∏–º–æ –≤ –±–ª–æ–∫ —ñ—Ñ —ñ –æ–≥–æ–ª–æ—à—É—î–º–æ –Ω—ñ—á–∏—é)
         break                     # –ó–∞–≤–¥—è–∫–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É break –≤–∏—Ö–æ–¥–∏–º–æ –∑ —Ü–∏–∫–ª—É - (–ø—Ä–∏—Ä–∏–≤–∞—î–º–æ)


def main():
   while True: # –ë–µ–∑–∫—ñ–Ω–µ—á–Ω–∏–π —Ü–∏–∫–ª (–∑–∞–∫—ñ–Ω—á–∏—Ç—å—Å—è –ø—Ä–∏ —É–º–æ–≤—ñ —è–∫—â–æ –≥—Ä–∞–≤–µ—Ü—å –Ω–µ —Å—Ö–æ—á–µ –≥—Ä–∞—Ç–∏ –¥–∞–ª—ñ)

      board = {   # —Å—Ç–≤–æ—Ä—é—î–º–æ dictionary (—Å–ª–æ–≤–∞—Ä—å) –∑ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –Ω–∞—à–æ–≥–æ –ø–æ–ª—è [–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –ø–æ–ª–µ –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω–µ —Å—Ç–µ–ø–µ–Ω–µ–≤–∏–º–∏ —á–∏—Å–ª–∞–º–∏]
         1: '¬π',  # (–∫–æ–ª–∏ –≥—Ä–∞–≤–µ—Ü—å –æ–±–µ—Ä–µ –ø–æ–ª–µ –ø–æ –∫–ª—é—á—É —Ç—ñ—î—ó —Ü–∏—Ñ—Ä–∏ –º–∏ –∑–∞–º—ñ–Ω–µ–º–æ —ó—ó –≤–µ–ª—å—é (—Å—Ç–µ–ø–µ–Ω–µ–≤–µ —á–∏—Å–ª–æ)
         2: '¬≤',  # –Ω–∞ –• –∞–±–æ –û –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –≥—Ä–∞–≤—Ü—è)
         3: '¬≥',
         4: '‚Å¥',
         5: '‚Åµ',
         6: '‚Å∂',
         7: '‚Å∑',
         8: '‚Å∏',
         9: '‚Åπ'
         }

      start_game(board) # –§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –ø–æ—á–∏–Ω–∞—î –≥—Ä—É (–ü–æ—á–∞—Ç–æ–∫ –≥—Ä–∏)
      draw_board(board) # –§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –ø–æ–ª–µ
      play = input('\n –ì—Ä–µ—î–º–æ –¥–∞–ª—ñ? (–¢–∞–∫/–ù—ñ) ') # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–º—ñ–Ω–Ω—É —ñ –ø—Ä–∏—Å–≤–æ—é—î–º–æ —ó–π —Ä—ñ—à–µ–Ω–Ω—è –≥—Ä–∞–≤—Ü—è "–ß–∏ –±–∞–∂–∞—î –≤—ñ–Ω –≥—Ä–∞—Ç–∏ –¥–∞–ª—ñ"

      # ‚Üì‚Üì‚Üì –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≥—Ä–∞–≤–µ—Ü—å —Ö–æ—á–µ –≥—Ä–∞—Ç–∏ –¥–∞–ª—ñ 
      if play.upper() != '–¢–ê–ö': # (–ø–µ—Ä–µ–≤–æ–¥–∏–º–æ –Ω–∞—à—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É –≤–µ—Ä—Ö–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä —Ç–æ–º—É —â–æ –≥—Ä–∞–≤–µ—Ü—å –º–æ–∂–µ –≤–≤–æ–¥–∏—Ç–∏ —è–∫ –∑–≤–µ–ª–∏–∫–æ—ó —Ç–∞–∫ —ñ –∑ –º–∞–ª–µ–Ω—å–∫–æ—ó –±—É–∫–≤–∏)
         break # –ó–∞–≤–¥—è–∫–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É break –≤–∏—Ö–æ–¥–∏–º–æ –∑ —Ü–∏–∫–ª—É - (–ø—Ä–∏—Ä–∏–≤–∞—î–º–æ)

      board.clear() # –û—á–∏—â—É—î–º–æ –Ω–∞—à dictionary (—Å–ª–æ–≤–∞—Ä—å) [—Å—Ç–∏—Ä–∞—î–º–æ –Ω–∞—à–µ –ø–æ–ª–µ] –≤ –Ω–∞—Å—Ç—É–ø–Ω—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó –º–∏ "—Å—Ç–≤–æ—Ä—é—î–º–æ" –Ω–æ–≤–µ - —á–∏—Å—Ç–µ –ø–æ–ª–µ
         

main()